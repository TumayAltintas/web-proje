declare const CAccordion: import("vue").DefineComponent<{
    /**
     * The active item key.
     */
    activeItemKey: {
        type: (NumberConstructor | StringConstructor)[];
        default: undefined;
        require: boolean;
    };
    /**
     * Make accordion items stay open when another item is opened
     */
    alwaysOpen: BooleanConstructor;
    /**
     * Removes the default background-color, some borders, and some rounded corners to render accordions edge-to-edge with their parent container.
     */
    flush: BooleanConstructor;
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    /**
     * The active item key.
     */
    activeItemKey: {
        type: (NumberConstructor | StringConstructor)[];
        default: undefined;
        require: boolean;
    };
    /**
     * Make accordion items stay open when another item is opened
     */
    alwaysOpen: BooleanConstructor;
    /**
     * Removes the default background-color, some borders, and some rounded corners to render accordions edge-to-edge with their parent container.
     */
    flush: BooleanConstructor;
}>>, {
    activeItemKey: string | number;
    alwaysOpen: boolean;
    flush: boolean;
}>;
export { CAccordion };
