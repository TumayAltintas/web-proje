import { PropType, RendererElement } from 'vue';
import { Placement } from '@popperjs/core';
declare const CPopover: import("vue").DefineComponent<{
    /**
     * Content for your component. If you want to pass non-string value please use dedicated slot `<template #content>...</template>`
     */
    content: {
        type: StringConstructor;
        default: undefined;
        required: false;
    };
    /**
     * Offset of the popover relative to its target.
     */
    offset: {
        type: ArrayConstructor;
        default: () => number[];
        required: false;
    };
    /**
     * Describes the placement of your component after Popper.js has applied all the modifiers that may have flipped or altered the originally provided placement property.
     */
    placement: {
        type: PropType<Placement>;
        default: string;
        required: false;
        validator: (value: string) => boolean;
    };
    /**
     * Title for your component. If you want to pass non-string value please use dedicated slot `<template #title>...</template>`
     */
    title: {
        type: StringConstructor;
        default: undefined;
        required: false;
    };
    /**
     * Sets which event handlers you’d like provided to your toggle prop. You can specify one trigger or an array of them.
     *
     * @values 'click', 'focus', 'hover'
     */
    trigger: {
        type: PropType<string | string[]>;
        default: string;
        required: false;
        validator: (value: string | string[]) => boolean;
    };
    /**
     * Toggle the visibility of popover component.
     */
    visible: BooleanConstructor;
}, () => (import("vue").VNode<import("vue").RendererNode, RendererElement, {
    [key: string]: any;
}> | import("vue").VNode<import("vue").RendererNode, RendererElement, {
    [key: string]: any;
}>[] | undefined)[], unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("hide" | "show")[], "hide" | "show", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    /**
     * Content for your component. If you want to pass non-string value please use dedicated slot `<template #content>...</template>`
     */
    content: {
        type: StringConstructor;
        default: undefined;
        required: false;
    };
    /**
     * Offset of the popover relative to its target.
     */
    offset: {
        type: ArrayConstructor;
        default: () => number[];
        required: false;
    };
    /**
     * Describes the placement of your component after Popper.js has applied all the modifiers that may have flipped or altered the originally provided placement property.
     */
    placement: {
        type: PropType<Placement>;
        default: string;
        required: false;
        validator: (value: string) => boolean;
    };
    /**
     * Title for your component. If you want to pass non-string value please use dedicated slot `<template #title>...</template>`
     */
    title: {
        type: StringConstructor;
        default: undefined;
        required: false;
    };
    /**
     * Sets which event handlers you’d like provided to your toggle prop. You can specify one trigger or an array of them.
     *
     * @values 'click', 'focus', 'hover'
     */
    trigger: {
        type: PropType<string | string[]>;
        default: string;
        required: false;
        validator: (value: string | string[]) => boolean;
    };
    /**
     * Toggle the visibility of popover component.
     */
    visible: BooleanConstructor;
}>> & {
    onHide?: ((...args: any[]) => any) | undefined;
    onShow?: ((...args: any[]) => any) | undefined;
}, {
    visible: boolean;
    placement: Placement;
    trigger: string | string[];
    content: string;
    offset: unknown[];
    title: string;
}>;
export { CPopover };
